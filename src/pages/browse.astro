---
import Layout from '../layouts/layout.astro';
import chatbots from '../data/chatbots.json';
---

<Layout title="Browse Chatbots">
  <section id="browse-section" class="max-w-6xl mx-auto px-6 py-16 text-center">
    <h1 class="text-4xl font-bold mb-10">🧠 Browse Spatchat Rooms</h1>
    <p class="text-gray-600 text-lg mb-10 max-w-2xl mx-auto">
      Explore AI-powered spatial analysis rooms tailored to your research interests. Click a card to launch an interactive chat.
    </p>

    <div id="chatbot-grid" class="grid gap-8 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">
      {chatbots.map(bot => (
        <a
          href={`/browse?room=${bot.id}`}
          class="bot-card block bg-white shadow-md rounded-2xl p-8 hover:shadow-2xl transition text-left border border-gray-100 h-full"
          data-bot-id={bot.id}
        >
          <h2 class="text-2xl font-bold mb-4 text-pink-700">{bot.title}</h2>

          <div class="flex flex-wrap gap-2 text-sm mb-6">
            {bot.tags.map(tag => (
              <span class="bg-pink-100 text-pink-700 px-3 py-1 rounded-full">{tag}</span>
            ))}
          </div>

          <p class="text-gray-700 text-base leading-relaxed">{bot.description}</p>
        </a>
      ))}
    </div>
  </section>

  <!-- JavaScript: Replace content based on ?room= param -->
  <!-- Keep your <script type="module"> for the iframe logic ONLY -->
<script type="module">
  const bots = {
    landmetrics: {
      title: "Landscape Metrics Chatbot",
      url: "https://hoyiwan-spatchat.hf.space/",
    },
    // more bots...
  };

  const params = new URLSearchParams(window.location.search);
  const room = params.get("room");

  if (room && bots[room]) {
    const section = document.getElementById("browse-section");
    const bot = bots[room];

    section.innerHTML = `...`; // iframe and fullscreen buttons here

    // Fullscreen logic
    setTimeout(() => {
      ...
    }, 100);
  }
</script>

<!-- ✅ New non-module script to track clicks -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".bot-card").forEach(card => {
      card.addEventListener("click", (e) => {
        const botId = card.dataset.botId;
        const href = card.getAttribute("href");
        if (!botId || !href) return;

        // Fire and forget: don't block navigation
        fetch("/.netlify/functions/track-clicks", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ botId }),
        }).catch(err => {
          console.error("❌ Click tracking failed:", err);
        });

        // Let the navigation happen
        window.location.href = href;

        //setTimeout(() => (window.location.href = href), 100);
      });
    });
  });
</script>



</Layout>
