---
import Layout from '../layouts/layout.astro';
import chatbots from '../data/chatbots.json';
---

<Layout title="Browse Chatbots">
  <section id="browse-section" class="max-w-6xl mx-auto px-6 py-16 text-center">
    <h1 class="text-4xl font-bold mb-10">üß† Browse Spatchat Rooms</h1>
    <p class="text-gray-600 text-lg mb-10 max-w-2xl mx-auto">
      Explore AI-powered spatial analysis rooms tailored to your research interests. Click a card to launch an interactive chat.
    </p>

    <div id="chatbot-grid" class="grid gap-8 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">
      {chatbots.map(bot => (
        <a
          href={`/browse?room=${bot.id}`}
          class="bot-card block bg-white shadow-md rounded-2xl p-8 hover:shadow-2xl transition text-left border border-gray-100 h-full"
          data-bot-id={bot.id}
        >
          <h2 class="text-2xl font-bold mb-4 text-pink-700">{bot.title}</h2>

          <div class="flex flex-wrap gap-2 text-sm mb-6">
            {bot.tags.map(tag => (
              <span class="bg-pink-100 text-pink-700 px-3 py-1 rounded-full">{tag}</span>
            ))}
          </div>

          <p class="text-gray-700 text-base leading-relaxed">{bot.description}</p>
        </a>
      ))}
    </div>
  </section>

  <!-- JavaScript: Replace content based on ?room= param -->

<!-- ‚úÖ New non-module script to track clicks -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const bots = {
      landmetrics: {
        title: "Landscape Metrics Chatbot",
        url: "https://hoyiwan-spatchat.hf.space/",
      },
      sdm: {
	title: "SDM Chatbot",
	url: "https://hoyiwan-spatchat-sdm.hf.space"
      },
      homerange: {
        title: "Home Range Chatbot",
        url: "https://hoyiwan-spatchat-hr.hf.space"
      },
      stats: {
        title: "Foundational Statistics",
	url: "https://hoyiwan-spatchat-stats.hf.space"
      }
      // add more bots as needed
    };

    // ‚úÖ Click tracking for bot cards
    document.querySelectorAll(".bot-card").forEach(card => {
      card.addEventListener("click", (e) => {
        e.preventDefault();

        const botId = card.dataset.botId;
        const href = card.getAttribute("href");
        if (!botId || !href) return;

        // Send tracking request
        fetch("/.netlify/functions/track-clicks", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ botId }),
        }).catch(err => {
          console.error("‚ùå Click tracking failed:", err);
        });

        // Slight delay before navigating
        setTimeout(() => {
          window.location.href = href;
        }, 150);
      });
    });

    // ‚úÖ Show iframe if room param exists
    const params = new URLSearchParams(window.location.search);
    const room = params.get("room");

    if (room && bots[room]) {
      const section = document.getElementById("browse-section");
      const bot = bots[room];

      section.innerHTML = `
        <div class="max-w-6xl mx-auto text-center mb-4">
          <h1 class="text-3xl font-bold mb-2">${bot.title}</h1>
          <a href="/browse" class="text-pink-600 underline hover:text-pink-800 text-sm">‚Üê Back to all chatbots</a>
        </div>
        <div class="h-[90vh] w-full">
          <div class="flex gap-4 justify-center mt-6">
            <button
              id="fullscreenBtn"
              class="px-4 py-2 bg-pink-500 text-white rounded hover:bg-pink-600 transition"
            >
              üîç Fullscreen
            </button>
            <button
              id="exitFullscreenBtn"
              class="px-4 py-2 bg-gray-400 text-white rounded hover:bg-gray-500 transition hidden"
            >
              üîô Collapse
            </button>
          </div>

          <iframe
            id="bot-frame"
            src="${bot.url}"
            class="w-full h-full rounded-lg shadow-lg border mt-4"
            allow="clipboard-write"
            allowfullscreen
          ></iframe>
        </div>
      `;

      // Fullscreen logic
      setTimeout(() => {
        const fullscreenBtn = document.getElementById('fullscreenBtn');
        const exitFullscreenBtn = document.getElementById('exitFullscreenBtn');
        const iframe = document.getElementById('bot-frame');

        fullscreenBtn?.addEventListener('click', () => {
          iframe?.requestFullscreen?.();
        });

        exitFullscreenBtn?.addEventListener('click', () => {
          document.exitFullscreen?.();
        });

        document.addEventListener('fullscreenchange', () => {
          const isFullscreen = document.fullscreenElement !== null;
          fullscreenBtn?.classList.toggle('hidden', isFullscreen);
          exitFullscreenBtn?.classList.toggle('hidden', !isFullscreen);
        });
      }, 100);
    }
  });
</script>
</Layout>
